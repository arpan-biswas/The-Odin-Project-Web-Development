Update Linux

The rest of the installation will take place inside the terminal window.

First, we need to make sure your Linux distribution is up to date. Run these commands one by one. Because these commands use sudo, you will have to enter your password in order for them to run. When typing your password, you may not get any visual feedback, but rest assured that your password is being entered. Once you’re done typing your password, press enter.

  sudo apt update
  sudo apt upgrade

When it prompts you, press y and then enter.
Step 1.3: Install Packages and Libraries

Next, you need to install some required packages that do not come preinstalled. Be sure to copy and paste this command.

  sudo apt install curl git nodejs gcc make libssl-dev libreadline-dev zlib1g-dev libsqlite3-dev

When it prompts you, press y and then enter. You may or may not have to type your password after pressing enter.
Step 2: Install Ruby

Now you’re ready to install Ruby. We’re going to use a tool called rbenv, which makes it easy to install and manage Ruby versions.
Step 2.1: Install rbenv

First, you need to clone the rbenv repository using git, which is a version control program you installed with the last command. You will become more familiar with this program later on.

  git clone https://github.com/rbenv/rbenv.git ~/.rbenv

Next, we’ll add some commands to allow rbenv to work properly. We can use the Linux echo command to make it easy.

Note: Run these commands one by one in sequence. They will not provide any output if done properly. Again, be sure to copy and paste these commands.

  echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bashrc
  echo 'eval "$(rbenv init -)"' >> ~/.bashrc
  exit

After running the final exit command, you will need to re-open the terminal (see Step 1.1 above).

Next, you need to install ruby-build to help compile the Ruby binaries. Run these commands in the terminal to create a directory for the ruby-build plugin and then download it to the proper directory.

  mkdir -p "$(rbenv root)"/plugins
  git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build

Finally, run
  
  rbenv -v

from your terminal to verify that rbenv has been installed correctly. You should get an output with a version number similar to this:
  rbenv 1.1.2-2-g4e92322
  
Install Ruby
 
It’s finally time to install Ruby using rbenv!

Inside the terminal, run this command:

  rbenv install 2.6.3 --verbose

This command will take 10-15 minutes to complete. The --verbose flag will show you what’s going on so you can be sure it hasn’t gotten stuck. While it installs, take this time to watch this video or to get a glass of water.

When the last command is finished, set the Ruby version and verify that it’s working:

  rbenv global 2.6.3

Then,

  ruby -v

The above command should return something similar to this:

  ruby 2.6.3pxx (20xx-xx-xx revision xxxxx) [x86_64-linux]

where x represents the version available at the time you installed Ruby.

Well done! Pat yourself on the back! The hard part is done


